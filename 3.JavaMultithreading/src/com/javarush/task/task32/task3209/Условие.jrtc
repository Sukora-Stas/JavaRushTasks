taskKey="com.javarush.task.task32.task3209.big20"

HTML Editor (20)

20.1.	Реализуй метод создания нового документа createNewDocument() в контроллере. Он
должен:
20.1.1.	Выбирать html вкладку у представления.
20.1.2.	Сбрасывать текущий документ.
20.1.3.	Устанавливать новый заголовок окна, например: "HTML редактор". Воспользуйся
методом setTitle(), который унаследован в нашем представлении.
20.1.4.	Сбрасывать правки в Undo менеджере. Используй метод resetUndo представления.
20.1.5. Обнулить переменную currentFile.
20.2.	Реализуй метод инициализации init() контроллера. Он должен просто вызывать метод
создания нового документа.
Проверь работу пункта меню Новый.


Требования:
1.	Метод createNewDocument() в контроллере должен выбирать html вкладку у представления.
2.	Метод createNewDocument() в контроллере должен сбрасывать текущий документ.
3.	Метод createNewDocument() в контроллере должен устанавливать новый заголовок окна.
4.	Метод createNewDocument() в контроллере должен сбрасывать правки в Undo менеджере.
5.	Метод createNewDocument() в контроллере должен обнулить currentFile.
6.	Метод init() в контроллере должен вызывать метод создания нового документа.


HTML Editor (19)

Реализуем метод actionPerformed(ActionEvent actionEvent) у представления, этот метод
наследуется от интерфейса ActionListener и будет вызваться при выборе пунктов меню, у
которых наше представление указано в виде слушателя событий.
19.1.	Получи из события команду с помощью метода getActionCommand(). Это будет
обычная строка. По этой строке ты можешь понять какой пункт меню создал данное
событие.
19.2.	Если это команда "Новый", вызови у контроллера метод createNewDocument(). В этом
пункте и далее, если необходимого метода в контроллере еще нет - создай заглушки.
19.3.	Если это команда "Открыть", вызови метод openDocument().
19.4.	Если "Сохранить", то вызови saveDocument().
19.5.	Если "Сохранить как..." - saveDocumentAs().
19.6.	Если "Выход" - exit().
19.7.	Если "О программе", то вызови метод showAbout() у представления.
Проверь, что заработали пункты меню Выход и О программе.



HTML Editor (18)

Реализуй метод selectedTabChanged() представления. Этот метод вызывается, когда произошла
смена выбранной вкладки. Итак:
18.1.	Метод должен проверить, какая вкладка сейчас оказалась выбранной.
18.2.	Если выбрана вкладка с индексом 0 (html вкладка), значит нам нужно получить текст из
plainTextPane и установить его в контроллер с помощью метода setPlainText.
18.3.	Если выбрана вкладка с индексом 1 (вкладка с html текстом), то необходимо получить
текст у контроллера с помощью метода getPlainText() и установить его в панель
plainTextPane.
18.4.	Сбросить правки (вызвать метод resetUndo представления).



HTML Editor (17)

Добавь метод String getPlainText() в контроллер. Он должен получать текст из документа со
всеми html тегами.
17.1.	Создай объект StringWriter.
17.2.	Перепиши все содержимое из документа document в созданный объект с помощью
метода write класса HTMLEditorKit.
17.3.	Как обычно, метод не должен кидать исключений.



HTML Editor (16)

Добавь метод setPlainText(String text) в контроллер. Он будет записывать переданный текст с
html тегами в документ document. При его реализации:
16.1.	Сбрось документ.
16.2.	Создай новый реадер StringReader на базе переданного текста.
16.3.	Вызови метод read() из класса HTMLEditorKit, который вычитает данные из реадера в
документ document.
16.4.	Проследи, чтобы метод не кидал исключения. Их необходимо просто логировать.



HTML Editor (15)

Добавь в контроллер метод resetDocument(), который будет сбрасывать текущий документ. Он
должен:
15.1.	Удалять у текущего документа document слушателя правок которые можно
отменить/вернуть (найди подходящий для этого метод, унаследованный от
AbstractDocument). Слушателя нужно запросить у представления (метод getUndoListener()).
Не забудь проверить, что текущий документ существует (не null).
15.2.	Создавать новый документ по умолчанию и присваивать его полю document.
Подсказка: воспользуйся подходящим методом класса HTMLEditorKit.
15.3.	Добавлять новому документу слушателя правок.
15.4.	Вызывать у представления метод update().



